name: Go Continuous Integration
on:
  push:
    branches:
      - master
  pull_request:

jobs:
  golangci-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: '1.20'
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Run Go linters
        uses: golangci/golangci-lint-action@v3
        with:
          args: --verbose
          skip-pkg-cache: true
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: '1.20'
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Run tests
        run: go test -race ./...
  integration-tests:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.USER_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: '1.20'
      - name: install GitHub cli
        run: |
          sudo apt update
          sudo apt install gh -y
      - name: build extension
        run: |
          go build
      - name: install extension
        run: |
          gh extension install .
      - name: Run GitHub atlas extension
        run: |
          gh atlas init-ci --token=${{ secrets.ATLAS_CLOUD_TOKEN }} --driver="mysql" "testdata/migrations"
          sleep 3
      - name: validate pull request is created
        run: |
          PULL_REQUESTS=$(gh pr list --search "'Add Atlas CI configuration' in:title" --json  headRefName | jq length)
          if [ $PULL_REQUESTS -ne 1 ]; then
              echo "Pull request not created"
              exit 1
          fi
      - name: cleanup the created pr and branch
        run: |
          BRANCH=$(gh pr list --search "'Add Atlas CI configuration' in:title" --json  headRefName | jq -r '.[0].headRefName')
          gh pr close $BRANCH -d
